---
variables:
  HELM_VERSION: 3.8.1
  HELM_EXPERIMENTAL_OCI: 1

stages:
  - linters
  - build
  - publish

# yamllint:
#   stage: linters
#   image:
#     name: docker.io/cytopia/yamllint
#     entrypoint: ["/bin/ash", "-c"]
#   before_script:
#     - yamllint --version
#   script:
#     - yamllint --strict -f colored .

helm lint:
  stage: linters
  image:
    name: docker.io/alpine/helm:$HELM_VERSION
    entrypoint: ["/bin/sh", "-c"]
  script:
    - helm lint charts/*

helm package:
  stage: build
  image:
    name: docker.io/alpine/helm:$HELM_VERSION
    entrypoint: ["/bin/sh", "-c"]
  before_script:
    - helm repo add argo https://argoproj.github.io/argo-helm
    - helm repo update
  script:
    - mkdir -p ./publish
    - set -x && for i in $(find charts/* -maxdepth 0 -type d); do
        helm dependency update $i;
        helm dependency build $i;
        helm package $i --destination ./publish;
      done
  artifacts:
    paths:
      - publish

helm publish to gitlab internal:
  stage: publish
  variables:
    GIT_STRATEGY: none
  image:
    name: docker.io/curlimages/curl:latest
    entrypoint: ["/bin/sh", "-c"]
  script:
    - set -x && for i in $(find publish/* -type f -name '*.tgz'); do
        curl --request POST --user gitlab-ci-token:$CI_JOB_TOKEN --form "chart=@$i" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/api/stable/charts";
      done

helm publish to chartmuseum:
  stage: publish
  variables:
    GIT_STRATEGY: none
  image:
    name: docker.io/curlimages/curl:latest
    entrypoint: ["/bin/sh", "-c"]
  script:
    - set -x && for i in $(find publish/* -type f -name '*.tgz'); do
        curl --user $CHARTMUSEUM_USERNAME:$CHARTMUSEUM_PASSWORD --data-binary "@$i" "${CHARTMUSEUM_URL}/api/charts";
      done
