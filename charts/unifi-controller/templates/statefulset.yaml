apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "unifi.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "unifi.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "unifi.fullname" . }}
  selector:
    matchLabels:
      {{- include "unifi.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "unifi.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "unifi.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: TZ
              value: {{ .Values.environment.timezone }}
            - name: PUID
              value: "{{ .Values.environment.uid }}"
            - name: PGID
              value: "{{ .Values.environment.gid }}"
            - name: MEM_LIMIT
              value: "{{ .Values.environment.memLimit }}"
            - name: MEM_STARTUP
              value: "{{ .Values.environment.memStartup }}"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
            - name: portal-http
              containerPort: 8880
              protocol: TCP
            - name: portal-https
              containerPort: 8843
              protocol: TCP
            - name: stun
              containerPort: 3478
              protocol: UDP
            - name: ap-discovery
              containerPort: 10001
              protocol: UDP
            - name: throughput
              containerPort: 6789
              protocol: TCP
            - name: syslog
              containerPort: 5514
              protocol: UDP
          {{- if .Values.probes.startup.enabled }}
          startupProbe: {{ toYaml .Values.probes.startup.probe | nindent 12 }}
          {{- end }}
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe: {{ toYaml .Values.probes.liveness.probe | nindent 12 }}
          {{- end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe: {{ toYaml .Values.probes.readiness.probe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /config
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podDnsPolicy }}
      dnsPolicy: {{ . }}
      {{- end }}
      {{- with .Values.podDnsConfig }}
      dnsConfig:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: config
      spec:
        {{- if .Values.persistence.storageClassName }}
        storageClassName: {{ .Values.persistence.storageClassName }}
        {{- end }}
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
